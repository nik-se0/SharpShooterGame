/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.sharpshootergame;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author nik-s
 */
public class GameW extends javax.swing.JPanel {
    
    int y1=0,y2=0,r1=0,r2=0,k1=1,k2=2; //координаты для движения кругов
    int x=0,lineX;; //координаты для движения стрелки
    int score=0, shot=0;
    boolean flag=true;
    
    public void moveCircleY(){ 
        int c=getHeight()/50;
        if(Math.abs(y1+k1*c) > getHeight() / 2 - r1 / 2){k1=-k1;}
        if(Math.abs(y2+k2*c) > getHeight() / 2 - r2 / 2){k2=-k2;}
        this.y1=this.y1+k1*c;
        this.y2=this.y2+k2*c;

        //repaint();   
    }
    public void moveArrowX() throws InterruptedException{ 
       
        if(x+lineX > getWidth()){
            x=0;shot++;flag=false; return;}
        if((x+lineX==lineX*11)&(r1/2-Math.abs(y1)>0)){
            setBackground(new Color(255, 255, 204));
            Thread.sleep(450);
            setBackground(new Color(255, 255, 255));
            x=0;score++;shot++;flag=false; return;    
        }
        if((x+lineX==lineX*13)&(r2/2-Math.abs(y2)>0)){
            setBackground(new Color(255, 229, 153));
            Thread.sleep(450);
            setBackground(new Color(255, 255, 255));
            x=0;score=score+2;shot++;flag=false; return;    
        }
        

        this.x=this.x+lineX;
   }
    public boolean Paint(boolean flagA) throws InterruptedException
    {
        moveCircleY();
           if(flagA){
               moveArrowX();
               flagA=flag;
               flag=true;
           }
        repaint(); 
        return flagA;
    }
    
   
    /**
     * Creates new form GameW
     */
    public GameW() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setStroke(new BasicStroke(2));

        // Рисуем стрелку слева по середине
        lineX = getWidth()/ 15;
        int midY = getHeight() / 2;
        int arrowWidth = midY/20; // Ширина стрелки  
        g2d.drawLine(lineX+x, midY, 0+x, midY); // Линия стрелки
        g2d.drawLine(lineX+x, midY, lineX - arrowWidth+x, midY - arrowWidth); // Голова стрелки
        g2d.drawLine(lineX+x, midY, lineX - arrowWidth+x, midY + arrowWidth);

        // Рисуем две вертикальные прямые в третьей четверти от всей длины
        g2d.setColor(new Color(220, 220, 220, 85)); 
        g2d.drawLine(lineX*11, 0, lineX*11, getHeight());
        g2d.drawLine(lineX*13, 0, lineX*13, getHeight());
    
         // Рисуем две окружности с центром на этих прямых
        double a= 1.5;
        r2 = (int) (lineX/a); r1=2*r2;
        g2d.setColor(new Color(229, 204, 255, 85));
        g2d.fillOval(lineX*11 - r1 / 2, midY - r1 / 2+y1, r1, r1);
        g2d.fillOval(lineX*13 - r2 / 2, midY - r2 / 2+y2, r2, r2);
        g2d.setColor(new Color(152, 0, 152));
        g2d.setStroke(new BasicStroke(1));
        g2d.drawOval(lineX*11 - r1 / 2, midY - r1 / 2+y1, r1, r1);
        g2d.drawOval(lineX*13 - r2 / 2, midY - r2 / 2+y2, r2, r2);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
